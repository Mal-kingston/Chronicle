<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Chronicle">

    <!-- Regular button -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="2">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightDarkBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Add icon style -->
    <Style x:Key="AddIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    
                    <Border x:Name="border"
							Background="{TemplateBinding Background}" >
                        
                        <!-- Render scale transform on hover -->
                        <Border.RenderTransform>
                            <ScaleTransform />  
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5" />
                        </Border.RenderTransformOrigin>

                        <TextBlock x:Name="content" 
                                   Text="{TemplateBinding Content}" 
                                   Foreground="{TemplateBinding Foreground}"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.2" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15" />
                                    <DoubleAnimation To="1.2" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15" />
                                    <!--<ColorAnimation To="{StaticResource Blue}" Storyboard.TargetName="content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.0" />-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15" />
                                    <DoubleAnimation To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15" />
                                    <!--<ColorAnimation To="{StaticResource Gray}" Storyboard.TargetName="content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.0" />-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Delete sub menu button style-->
    <Style x:Key="SubMenuDeleteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
							Background="{TemplateBinding Background}" >

                        <!-- Render scale transform on hover -->
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5" />
                        </Border.RenderTransformOrigin>

                        <TextBlock Text="{TemplateBinding Content}" x:Name="content" 
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.3" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15" />
                                    <DoubleAnimation To="1.3" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15" />
                                    <DoubleAnimation To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="content" Value="{StaticResource RedBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu button -->
    <Style x:Key="MenuButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="270" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <!-- Menu title -->
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="8, 2" Focusable="False">

                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--Icon-->
                            <TextBlock Grid.Column="0"
                                       Text="{TemplateBinding Tag}"
                                       FontFamily="{StaticResource FontAwesomeSolid}"
                                       VerticalAlignment="Center" Margin="50, 0, -50, 0" />

                            <!--Header-->
                            <TextBlock Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       FontFamily="{StaticResource JostFont}"
                                       VerticalAlignment="Center" Margin="50, 0, 0, 0" />
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightDarkBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource BlueBrush}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BlueBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Context menu button style-->
    <Style x:Key="ContextMenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource XSmall}" />
        <Setter Property="FontFamily" Value="{StaticResource JostFont}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="0">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BlueBrush}" />
                            <Setter Property="Background" Value="{StaticResource LightDarkBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Vertical dots button style-->
    <Style x:Key="VerticalDotsButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="2">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BlueBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Prompt box button style-->
    <Style x:Key="PromptBoxButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="FontFamily" Value="{StaticResource JostFont}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="15 0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBrush}" />
        <Setter Property="BorderThickness" Value="1" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="10" >
                        <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" 
                                          VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BlueBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Recycle bin function button style-->
    <Style x:Key="RecycleBinFunctionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="FontFamily" Value="{StaticResource JostFont}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="20 0 0 0"/>
        
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">


                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="0">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BlueBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>